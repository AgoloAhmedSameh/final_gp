 START ----->  std::tuple<int> ----->  median_numbers (int a, int b, int c) ----->  int median; ----->  if (a > b) ----->  if (a < c) ----->  median = a; ----->  return std::make_tuple (median); -----> END
 START ----->  std::tuple<int> ----->  median_numbers (int a, int b, int c) ----->  int median; ----->  if (a > b) ----->  if (a < c) ----->  else if (b > c) ----->  median = b; ----->  return std::make_tuple (median); -----> END
 START ----->  std::tuple<int> ----->  median_numbers (int a, int b, int c) ----->  int median; ----->  if (a > b) ----->  if (a < c) ----->  else if (b > c) ----->  else ----->  median = c; ----->  return std::make_tuple (median); -----> END
 START ----->  std::tuple<int> ----->  median_numbers (int a, int b, int c) ----->  int median; ----->  if (a > b) ----->  else ----->  if (a > c) ----->  median = a; ----->  return std::make_tuple (median); -----> END
 START ----->  std::tuple<int> ----->  median_numbers (int a, int b, int c) ----->  int median; ----->  if (a > b) ----->  else ----->  if (a > c) ----->  else if (b < c) ----->  median = b; ----->  return std::make_tuple (median); -----> END
 START ----->  std::tuple<int> ----->  median_numbers (int a, int b, int c) ----->  int median; ----->  if (a > b) ----->  else ----->  if (a > c) ----->  else if (b < c) ----->  else ----->  median = c; ----->  return std::make_tuple (median); -----> END
