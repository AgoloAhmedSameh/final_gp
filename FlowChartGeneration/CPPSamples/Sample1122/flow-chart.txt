 START ----->  std::tuple<std::vector<std::string> > ----->  bf (const std::string &planet1, const std::string &planet2) ----->  std::vector<std::string> planet_names = { "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune" }; ----->  if (std::find (planet_names.begin (), planet_names.end (), planet1) == planet_names.end () || std::find (planet_names.begin (), planet_names.end (), planet2) == planet_names.end () || planet1 == planet2) ----->  return {}; -----> END
 START ----->  std::tuple<std::vector<std::string> > ----->  bf (const std::string &planet1, const std::string &planet2) ----->  std::vector<std::string> planet_names = { "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune" }; ----->  if (std::find (planet_names.begin (), planet_names.end (), planet1) == planet_names.end () || std::find (planet_names.begin (), planet_names.end (), planet2) == planet_names.end () || planet1 == planet2) ----->  auto planet1_index = std::find (planet_names.begin (), planet_names.end (), planet1) - planet_names.begin (); ----->  auto planet2_index = std::find (planet_names.begin (), planet_names.end (), planet2) - planet_names.begin (); ----->  if (planet1_index < planet2_index) ----->  return { std::vector<std::string> (planet_names.begin () + planet1_index + 1, planet_names.begin () + planet2_index) }; -----> END
 START ----->  std::tuple<std::vector<std::string> > ----->  bf (const std::string &planet1, const std::string &planet2) ----->  std::vector<std::string> planet_names = { "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune" }; ----->  if (std::find (planet_names.begin (), planet_names.end (), planet1) == planet_names.end () || std::find (planet_names.begin (), planet_names.end (), planet2) == planet_names.end () || planet1 == planet2) ----->  auto planet1_index = std::find (planet_names.begin (), planet_names.end (), planet1) - planet_names.begin (); ----->  auto planet2_index = std::find (planet_names.begin (), planet_names.end (), planet2) - planet_names.begin (); ----->  if (planet1_index < planet2_index) ----->  else ----->  return { std::vector<std::string> (planet_names.begin () + planet2_index + 1, planet_names.begin () + planet1_index) }; -----> END
