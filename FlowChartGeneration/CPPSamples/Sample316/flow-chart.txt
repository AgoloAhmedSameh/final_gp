 START ----->  std::vector<std::pair<int, int> > ----->  modified_encode (const std::vector<int> &alist) ----->  std::vector<std::pair<int, int> > result; ----->  if (alist.empty ()) ----->  return result; -----> END
 START ----->  std::vector<std::pair<int, int> > ----->  modified_encode (const std::vector<int> &alist) ----->  std::vector<std::pair<int, int> > result; ----->  if (alist.empty ()) ----->  int count = 1; -----> for (size_t i = 1; i <= alist.size (); ++i) ----->  if (i < alist.size () && alist[i] == alist[i - 1]) ----->  count++; ----->  return result; -----> END
 START ----->  std::vector<std::pair<int, int> > ----->  modified_encode (const std::vector<int> &alist) ----->  std::vector<std::pair<int, int> > result; ----->  if (alist.empty ()) ----->  int count = 1; -----> for (size_t i = 1; i <= alist.size (); ++i) ----->  if (i < alist.size () && alist[i] == alist[i - 1]) ----->  else ----->  if (count > 1) ----->  result.emplace_back (count, alist[i - 1]); ----->  count = 1; ----->  return result; -----> END
 START ----->  std::vector<std::pair<int, int> > ----->  modified_encode (const std::vector<int> &alist) ----->  std::vector<std::pair<int, int> > result; ----->  if (alist.empty ()) ----->  int count = 1; -----> for (size_t i = 1; i <= alist.size (); ++i) ----->  if (i < alist.size () && alist[i] == alist[i - 1]) ----->  else ----->  if (count > 1) ----->  else ----->  result.emplace_back (1, alist[i - 1]); ----->  count = 1; ----->  return result; -----> END
