 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  break; ----->  return false; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  break; ----->  return false; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  else if (!std::regex_search (p, std::regex ("[0-9]"))) ----->  break; ----->  return false; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  else if (!std::regex_search (p, std::regex ("[0-9]"))) ----->  else if (!std::regex_search (p, std::regex ("[A-Z]"))) ----->  break; ----->  return false; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  else if (!std::regex_search (p, std::regex ("[0-9]"))) ----->  else if (!std::regex_search (p, std::regex ("[A-Z]"))) ----->  else if (!std::regex_search (p, std::regex ("[$#@]"))) ----->  break; ----->  return false; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  else if (!std::regex_search (p, std::regex ("[0-9]"))) ----->  else if (!std::regex_search (p, std::regex ("[A-Z]"))) ----->  else if (!std::regex_search (p, std::regex ("[$#@]"))) ----->  else if (std::regex_search (p, std::regex ("\\s"))) ----->  break; ----->  return false; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  else if (!std::regex_search (p, std::regex ("[0-9]"))) ----->  else if (!std::regex_search (p, std::regex ("[A-Z]"))) ----->  else if (!std::regex_search (p, std::regex ("[$#@]"))) ----->  else if (std::regex_search (p, std::regex ("\\s"))) ----->  else ----->  return true; -----> END
 START ----->  bool ----->  pass_validity (const std::string &p) ----->  bool x = true; -----> while (x) ----->  if (p.length () < 6 || p.length () > 12) ----->  else if (!std::regex_search (p, std::regex ("[a-z]"))) ----->  else if (!std::regex_search (p, std::regex ("[0-9]"))) ----->  else if (!std::regex_search (p, std::regex ("[A-Z]"))) ----->  else if (!std::regex_search (p, std::regex ("[$#@]"))) ----->  else if (std::regex_search (p, std::regex ("\\s"))) ----->  else ----->  x = false; ----->  break; ----->  return false; -----> END
