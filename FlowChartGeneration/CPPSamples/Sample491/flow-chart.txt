 START ----->  std::pair<bool, int> ----->  binary_search (const std::vector<int> &item_list, int item) ----->  int first = 0; ----->  int last = item_list.size () - 1; ----->  bool found = false; -----> while (first <= last && !found) ----->  int mid = (first + last) / 2; ----->  if (item_list[mid] == item) ----->  found = true; ----->  return { found, 0 }; -----> END
 START ----->  std::pair<bool, int> ----->  binary_search (const std::vector<int> &item_list, int item) ----->  int first = 0; ----->  int last = item_list.size () - 1; ----->  bool found = false; -----> while (first <= last && !found) ----->  int mid = (first + last) / 2; ----->  if (item_list[mid] == item) ----->  else ----->  if (item < item_list[mid]) ----->  last = mid - 1; ----->  return { found, 0 }; -----> END
 START ----->  std::pair<bool, int> ----->  binary_search (const std::vector<int> &item_list, int item) ----->  int first = 0; ----->  int last = item_list.size () - 1; ----->  bool found = false; -----> while (first <= last && !found) ----->  int mid = (first + last) / 2; ----->  if (item_list[mid] == item) ----->  else ----->  if (item < item_list[mid]) ----->  else ----->  first = mid + 1; ----->  return { found, 0 }; -----> END
