 START ----->  std::pair<int, int> ----->  swap_count (const std::string &s) ----->  const char *chars = s.c_str (); ----->  int count_left = 0; ----->  int count_right = 0; ----->  int swap = 0; ----->  int imbalance = 0; -----> for (size_t i = 0; i < s.length (); ++i) ----->  if (chars[i] == '[') ----->  count_left += 1; ----->  if (imbalance > 0) ----->  swap += imbalance; ----->  imbalance -= 1; ----->  return { swap, 0 }; -----> END
 START ----->  std::pair<int, int> ----->  swap_count (const std::string &s) ----->  const char *chars = s.c_str (); ----->  int count_left = 0; ----->  int count_right = 0; ----->  int swap = 0; ----->  int imbalance = 0; -----> for (size_t i = 0; i < s.length (); ++i) ----->  if (chars[i] == '[') ----->  count_left += 1; ----->  if (imbalance > 0) ----->  return { swap, 0 }; -----> END
 START ----->  std::pair<int, int> ----->  swap_count (const std::string &s) ----->  const char *chars = s.c_str (); ----->  int count_left = 0; ----->  int count_right = 0; ----->  int swap = 0; ----->  int imbalance = 0; -----> for (size_t i = 0; i < s.length (); ++i) ----->  if (chars[i] == '[') ----->  else if (chars[i] == ']') ----->  count_right += 1; ----->  imbalance = (count_right - count_left); ----->  return { swap, 0 }; -----> END
 START ----->  std::pair<int, int> ----->  swap_count (const std::string &s) ----->  const char *chars = s.c_str (); ----->  int count_left = 0; ----->  int count_right = 0; ----->  int swap = 0; ----->  int imbalance = 0; -----> for (size_t i = 0; i < s.length (); ++i) ----->  if (chars[i] == '[') ----->  else if (chars[i] == ']') ----->  return { swap, 0 }; -----> END
