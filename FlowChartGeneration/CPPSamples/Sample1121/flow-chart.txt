 START ----->  int ----->  get_max_triples (int n) ----->  std::vector<int> A (n); -----> for (int i = 1; i <= n; ++i) ----->  A[i - 1] = i * i - i + 1; ----->  std::vector<std::tuple<int, int, int> > ans; -----> for (int i = 0; i < n; ++i) -----> for (int j = i + 1; j < n; ++j) -----> for (int k = j + 1; k < n; ++k) ----->  if ((A[i] + A[j] + A[k]) % 3 == 0) ----->  ans.emplace_back (A[i], A[j], A[k]);
 START ----->  int ----->  get_max_triples (int n) ----->  std::vector<int> A (n); -----> for (int i = 1; i <= n; ++i) ----->  A[i - 1] = i * i - i + 1; ----->  std::vector<std::tuple<int, int, int> > ans; -----> for (int i = 0; i < n; ++i) -----> for (int j = i + 1; j < n; ++j) -----> for (int k = j + 1; k < n; ++k) ----->  if ((A[i] + A[j] + A[k]) % 3 == 0) ----->  for (int k = j + 1; k < n; ++k) ----->  if ((A[i] + A[j] + A[k]) % 3 == 0) ----->  ans.emplace_back (A[i], A[j], A[k]);
