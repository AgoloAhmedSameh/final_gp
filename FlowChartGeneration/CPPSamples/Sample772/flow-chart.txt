 START ----->  std::tuple<std::string, size_t, size_t> ----->  occurance_substring (const std::string &text, const std::string &pattern) ----->  std::regex re (pattern); ----->  std::smatch match; ----->  if (std::regex_search (text, match, re)) ----->  size_t s = match.position (); ----->  size_t e = s + match.length (); ----->  return std::make_tuple (match.str (), s, e); -----> END
 START ----->  std::tuple<std::string, size_t, size_t> ----->  occurance_substring (const std::string &text, const std::string &pattern) ----->  std::regex re (pattern); ----->  std::smatch match; ----->  if (std::regex_search (text, match, re)) ----->  return std::make_tuple (, 0, 0); -----> END
