 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  if (currlen % 2 == 0) ----->  currlen = 0; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  else ----->  currlen++; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  else ----->  currlen++; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  maxlen = currlen; ----->  st = i - currlen; ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  else ----->  currlen++; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  else ----->  currlen++; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (maxlen < currlen) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  else ----->  currlen++; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return "-1"; -----> END
 START ----->  std::string ----->  find_Max_Len_Even (const std::string &str) ----->  int n = str.length (); ----->  int i = 0; ----->  int currlen = 0; ----->  int maxlen = 0; ----->  int st = -1; -----> while (i < n) ----->  if (str[i] == ' ') ----->  else ----->  currlen++; ----->  i++; ----->  if (currlen % 2 == 0) ----->  if (st == -1) ----->  return str.substr (st, maxlen); -----> END
