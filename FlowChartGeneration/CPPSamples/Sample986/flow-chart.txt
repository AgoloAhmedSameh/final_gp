 START ----->  std::optional<std::string> ----->  longest (const std::vector<std::string> &strings) ----->  if (strings.empty ()) ----->  return std::nullopt; -----> END
 START ----->  std::optional<std::string> ----->  longest (const std::vector<std::string> &strings) ----->  if (strings.empty ()) ----->  size_t maxlen = 0; -----> for (const auto &s : strings) ----->  maxlen = std::max (maxlen, s.length ()); -----> for (const auto &s : strings) ----->  if (s.length () == maxlen) ----->  return s; -----> END
 START ----->  std::optional<std::string> ----->  longest (const std::vector<std::string> &strings) ----->  if (strings.empty ()) ----->  size_t maxlen = 0; -----> for (const auto &s : strings) ----->  maxlen = std::max (maxlen, s.length ()); -----> for (const auto &s : strings) ----->  if (s.length () == maxlen) ----->  return std::nullopt; -----> END
