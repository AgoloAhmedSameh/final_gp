 START ----->  std::string ----->  count_Divisors (int n) ----->  int count = 0; -----> for (int i = 1; i <= (int)(sqrt (n)) + 1; i++) ----->  if (n % i == 0) ----->  if (n / i == i) ----->  count = count + 1; ----->  if (count % 2 == 0) ----->  return "Even"; -----> END
 START ----->  std::string ----->  count_Divisors (int n) ----->  int count = 0; -----> for (int i = 1; i <= (int)(sqrt (n)) + 1; i++) ----->  if (n % i == 0) ----->  if (n / i == i) ----->  count = count + 1; ----->  if (count % 2 == 0) ----->  else ----->  return "Odd"; -----> END
 START ----->  std::string ----->  count_Divisors (int n) ----->  int count = 0; -----> for (int i = 1; i <= (int)(sqrt (n)) + 1; i++) ----->  if (n % i == 0) ----->  if (n / i == i) ----->  else ----->  count = count + 2; ----->  if (count % 2 == 0) ----->  return "Even"; -----> END
 START ----->  std::string ----->  count_Divisors (int n) ----->  int count = 0; -----> for (int i = 1; i <= (int)(sqrt (n)) + 1; i++) ----->  if (n % i == 0) ----->  if (n / i == i) ----->  else ----->  count = count + 2; ----->  if (count % 2 == 0) ----->  else ----->  return "Odd"; -----> END
 START ----->  std::string ----->  count_Divisors (int n) ----->  int count = 0; -----> for (int i = 1; i <= (int)(sqrt (n)) + 1; i++) ----->  if (n % i == 0) ----->  if (count % 2 == 0) ----->  return "Even"; -----> END
 START ----->  std::string ----->  count_Divisors (int n) ----->  int count = 0; -----> for (int i = 1; i <= (int)(sqrt (n)) + 1; i++) ----->  if (n % i == 0) ----->  if (count % 2 == 0) ----->  else ----->  return "Odd"; -----> END
