 START ----->  int ----->  find_first_duplicate (const std::vector<int> &nums) ----->  std::unordered_set<int> num_set; ----->  int no_duplicate = -1; -----> for (size_t i = 0; i < nums.size (); ++i) ----->  if (num_set.find (nums[i]) != num_set.end ()) ----->  return nums[i]; -----> END
 START ----->  int ----->  find_first_duplicate (const std::vector<int> &nums) ----->  std::unordered_set<int> num_set; ----->  int no_duplicate = -1; -----> for (size_t i = 0; i < nums.size (); ++i) ----->  if (num_set.find (nums[i]) != num_set.end ()) ----->  else ----->  num_set.insert (nums[i]); ----->  return no_duplicate; -----> END
