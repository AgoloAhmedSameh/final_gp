 START ----->  std::vector<int> ----->  comb_sort (std::vector<int> nums) ----->  double shrink_fact = 1.3; ----->  int gaps = nums.size (); ----->  bool swapped = true; ----->  int i = 0; -----> while (gaps > 1 || swapped) ----->  gaps = static_cast<int> (gaps / shrink_fact); ----->  swapped = false; ----->  i = 0; -----> while (gaps + i < nums.size ()) ----->  if (nums[i] > nums[i + gaps]) ----->  std::swap (nums[i], nums[i + gaps]); ----->  swapped = true; ----->  i++;
 START ----->  std::vector<int> ----->  comb_sort (std::vector<int> nums) ----->  double shrink_fact = 1.3; ----->  int gaps = nums.size (); ----->  bool swapped = true; ----->  int i = 0; -----> while (gaps > 1 || swapped) ----->  gaps = static_cast<int> (gaps / shrink_fact); ----->  swapped = false; ----->  i = 0; -----> while (gaps + i < nums.size ()) ----->  if (nums[i] > nums[i + gaps]) ----->  i++;
