 START ----->  int ----->  binomial_coeff (int n, int k) ----->  std::vector<std::vector<int> > C (n + 1, std::vector<int> (k + 1, 0)); -----> for (int i = 0; i <= n; i++) -----> for (int j = 0; j <= std::min (i, k); j++) ----->  if (j == 0 || j == i) ----->  C[i][j] = 1;
 START ----->  int ----->  binomial_coeff (int n, int k) ----->  std::vector<std::vector<int> > C (n + 1, std::vector<int> (k + 1, 0)); -----> for (int i = 0; i <= n; i++) -----> for (int j = 0; j <= std::min (i, k); j++) ----->  if (j == 0 || j == i) ----->  else ----->  C[i][j] = C[i - 1][j - 1] + C[i - 1][j]; ----->  for (int j = 0; j <= std::min (i, k); j++) ----->  if (j == 0 || j == i) ----->  C[i][j] = 1;
 START ----->  int ----->  binomial_coeff (int n, int k) ----->  std::vector<std::vector<int> > C (n + 1, std::vector<int> (k + 1, 0)); -----> for (int i = 0; i <= n; i++) -----> for (int j = 0; j <= std::min (i, k); j++) ----->  if (j == 0 || j == i) ----->  else ----->  C[i][j] = C[i - 1][j - 1] + C[i - 1][j]; ----->  for (int j = 0; j <= std::min (i, k); j++) ----->  if (j == 0 || j == i) ----->  else ----->  C[i][j] = C[i - 1][j - 1] + C[i - 1][j];
 START ----->  int ----->  binomial_coeff (int n, int k) ----->  std::vector<std::vector<int> > C (n + 1, std::vector<int> (k + 1, 0)); -----> for (int i = 0; i <= n; i++) -----> for (int j = 0; j <= std::min (i, k); j++) ----->  if (j == 0 || j == i) ----->  else ----->  C[i][j] = C[i - 1][j - 1] + C[i - 1][j]; ----->  for (int j = 0; j <= std::min (i, k); j++) ----->  return C[n][k]; -----> END
