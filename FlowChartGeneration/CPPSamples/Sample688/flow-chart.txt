 START ----->  std::pair<int, int> ----->  min_jumps (const std::vector<int> &arr, int n) ----->  std::vector<int> jumps (n, 0); ----->  if (n == 0 || arr[0] == 0) ----->  return { std::numeric_limits<int>::max (), 0 }; -----> END
 START ----->  std::pair<int, int> ----->  min_jumps (const std::vector<int> &arr, int n) ----->  std::vector<int> jumps (n, 0); ----->  if (n == 0 || arr[0] == 0) ----->  jumps[0] = 0; -----> for (int i = 1; i < n; ++i) ----->  jumps[i] = std::numeric_limits<int>::max (); -----> for (int j = 0; j < i; ++j) ----->  if (i <= j + arr[j] && jumps[j] != std::numeric_limits<int>::max ()) ----->  jumps[i] = std::min (jumps[i], jumps[j] + 1); ----->  break; ----->  return { jumps[n - 1], 0 }; -----> END
