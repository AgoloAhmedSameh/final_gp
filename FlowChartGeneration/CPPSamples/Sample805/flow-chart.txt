 START ----->  std::pair<int, int> ----->  max_run_uppercase (const std::string &test_str) ----->  int cnt = 0; ----->  int res = 0; -----> for (size_t idx = 0; idx < test_str.length (); idx++) ----->  if (isupper (test_str[idx])) ----->  cnt++; ----->  if (isupper (test_str[test_str.length () - 1])) ----->  res = cnt; ----->  return std::make_pair (res, 0); -----> END
 START ----->  std::pair<int, int> ----->  max_run_uppercase (const std::string &test_str) ----->  int cnt = 0; ----->  int res = 0; -----> for (size_t idx = 0; idx < test_str.length (); idx++) ----->  if (isupper (test_str[idx])) ----->  cnt++; ----->  if (isupper (test_str[test_str.length () - 1])) ----->  return std::make_pair (res, 0); -----> END
 START ----->  std::pair<int, int> ----->  max_run_uppercase (const std::string &test_str) ----->  int cnt = 0; ----->  int res = 0; -----> for (size_t idx = 0; idx < test_str.length (); idx++) ----->  if (isupper (test_str[idx])) ----->  else ----->  res = cnt; ----->  cnt = 0; ----->  if (isupper (test_str[test_str.length () - 1])) ----->  res = cnt; ----->  return std::make_pair (res, 0); -----> END
 START ----->  std::pair<int, int> ----->  max_run_uppercase (const std::string &test_str) ----->  int cnt = 0; ----->  int res = 0; -----> for (size_t idx = 0; idx < test_str.length (); idx++) ----->  if (isupper (test_str[idx])) ----->  else ----->  res = cnt; ----->  cnt = 0; ----->  if (isupper (test_str[test_str.length () - 1])) ----->  return std::make_pair (res, 0); -----> END
