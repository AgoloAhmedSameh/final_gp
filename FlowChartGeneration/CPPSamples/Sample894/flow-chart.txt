 START ----->  std::pair<int, int> ----->  max_sum_subseq (const std::vector<int> &A) ----->  int n = A.size (); ----->  if (n == 1) ----->  return { A[0], 0 }; -----> END
 START ----->  std::pair<int, int> ----->  max_sum_subseq (const std::vector<int> &A) ----->  int n = A.size (); ----->  if (n == 1) ----->  std::vector<int> look_up (n); ----->  look_up[0] = A[0]; ----->  look_up[1] = std::max (A[0], A[1]); -----> for (int i = 2; i < n; ++i) ----->  look_up[i] = std::max (look_up[i - 1], look_up[i - 2] + A[i]); ----->  look_up[i] = std::max (look_up[i], A[i]); ----->  return { look_up[n - 1], 0 }; -----> END
