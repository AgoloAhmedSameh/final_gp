 START ----->  std::vector<int> ----->  merge (std::vector<int> a, std::vector<int> b) ----->  std::vector<int> c; -----> while (!a.empty () && !b.empty ()) ----->  if (a[0] < b[0]) ----->  c.push_back (a[0]); ----->  a.erase (a.begin ()); ----->  if (a.empty ()) ----->  c.insert (c.end (), b.begin (), b.end ()); ----->  return c; -----> END
 START ----->  std::vector<int> ----->  merge (std::vector<int> a, std::vector<int> b) ----->  std::vector<int> c; -----> while (!a.empty () && !b.empty ()) ----->  if (a[0] < b[0]) ----->  c.push_back (a[0]); ----->  a.erase (a.begin ()); ----->  if (a.empty ()) ----->  else ----->  c.insert (c.end (), a.begin (), a.end ()); ----->  return c; -----> END
 START ----->  std::vector<int> ----->  merge (std::vector<int> a, std::vector<int> b) ----->  std::vector<int> c; -----> while (!a.empty () && !b.empty ()) ----->  if (a[0] < b[0]) ----->  else ----->  c.push_back (b[0]); ----->  b.erase (b.begin ()); ----->  if (a.empty ()) ----->  c.insert (c.end (), b.begin (), b.end ()); ----->  return c; -----> END
 START ----->  std::vector<int> ----->  merge (std::vector<int> a, std::vector<int> b) ----->  std::vector<int> c; -----> while (!a.empty () && !b.empty ()) ----->  if (a[0] < b[0]) ----->  else ----->  c.push_back (b[0]); ----->  b.erase (b.begin ()); ----->  if (a.empty ()) ----->  else ----->  c.insert (c.end (), a.begin (), a.end ()); ----->  return c; -----> END
