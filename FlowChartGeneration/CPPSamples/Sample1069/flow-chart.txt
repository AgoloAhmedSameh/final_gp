 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  return false; -----> END
 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  else ----->  std::string state = "start"; -----> for (const auto &pair : dict) ----->  const std::string &key = pair.first; ----->  if (!std::all_of (key.begin (), key.end (), ::isalpha)) ----->  state = "mixed"; ----->  break; ----->  return state == "upper" || state == "lower"; -----> END
 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  else ----->  std::string state = "start"; -----> for (const auto &pair : dict) ----->  const std::string &key = pair.first; ----->  if (!std::all_of (key.begin (), key.end (), ::isalpha)) ----->  if (state == "start") ----->  if (std::all_of (key.begin (), key.end (), ::isupper)) ----->  state = "upper"; ----->  return state == "upper" || state == "lower"; -----> END
 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  else ----->  std::string state = "start"; -----> for (const auto &pair : dict) ----->  const std::string &key = pair.first; ----->  if (!std::all_of (key.begin (), key.end (), ::isalpha)) ----->  if (state == "start") ----->  if (std::all_of (key.begin (), key.end (), ::isupper)) ----->  else if (std::all_of (key.begin (), key.end (), ::islower)) ----->  state = "lower"; ----->  return state == "upper" || state == "lower"; -----> END
 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  else ----->  std::string state = "start"; -----> for (const auto &pair : dict) ----->  const std::string &key = pair.first; ----->  if (!std::all_of (key.begin (), key.end (), ::isalpha)) ----->  if (state == "start") ----->  if (std::all_of (key.begin (), key.end (), ::isupper)) ----->  else if (std::all_of (key.begin (), key.end (), ::islower)) ----->  else ----->  break; ----->  return state == "upper" || state == "lower"; -----> END
 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  else ----->  std::string state = "start"; -----> for (const auto &pair : dict) ----->  const std::string &key = pair.first; ----->  if (!std::all_of (key.begin (), key.end (), ::isalpha)) ----->  if (state == "start") ----->  else if ((state == "upper" && !std::all_of (key.begin (), key.end (), ::isupper)) || (state == "lower" && !std::all_of (key.begin (), key.end (), ::islower))) ----->  state = "mixed"; ----->  break; ----->  return state == "upper" || state == "lower"; -----> END
 START ----->  bool ----->  check_dict_case (const std::map<std::string, int> &dict) ----->  if (dict.empty ()) ----->  else ----->  std::string state = "start"; -----> for (const auto &pair : dict) ----->  const std::string &key = pair.first; ----->  if (!std::all_of (key.begin (), key.end (), ::isalpha)) ----->  if (state == "start") ----->  else if ((state == "upper" && !std::all_of (key.begin (), key.end (), ::isupper)) || (state == "lower" && !std::all_of (key.begin (), key.end (), ::islower))) ----->  else ----->  break; ----->  return state == "upper" || state == "lower"; -----> END
